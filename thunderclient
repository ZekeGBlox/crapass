local PLAYER = game.Players.LocalPlayer
local CurrentCam = game.Workspace.CurrentCamera
local UIS = game:GetService("UserInputService")
local mouseLocation = UIS.GetMouseLocation
local mouse = PLAYER:GetMouse()

local DeleteMob = {
    ESP = {
        Box = {
            Enabled = false;
            Name = false;
            Distance = false;
            Health = false;
            TeamCheck = true;
            HealthType = "Bar";
            BoxColor = Color3.fromRGB(255, 0, 0);
        };
        OutLines = {
            Enabled = false;
            TeamCheck = false;
            TeamColor = false;
            AlwaysShow = true;
            FillColor = Color3.fromRGB(75, 0, 10);
            FillTransparency = 0;
            OutlineColor = Color3.fromRGB(0, 0, 0);
            OutlineTransparency = 0;
        };
        Tracers = {
            Enabled = false;
            TeamCheck = false;
            TeamColor = false;
            Color = Color3.fromRGB(255, 0, 0);
        }
    },
    Aimbot = {
        Enabled = false;
        TeamCheck = true;
        WallCheck = false;
        ShowFov = false;
        Fov = 200;
        Smoothing = 0.5;
        AimPart = "Head";
        Keybind = Enum.UserInputType.MouseButton2;
        Thickness = 1;
        FovFillColor = Color3.fromRGB(100, 0, 100);
        FovColor = Color3.fromRGB(255, 0, 0);
        FovFillTransparency = 1;
        FovTransparency = 0;
    },
    Triggerbot = {
        Enabled = false;
        TeamCheck = true;
        Delay = 0;
    },
    Player = {
        WalkSpeed = false;
        Fly = false;
        FlySpeedValue = 15;
        InfiniteJump = false;
        HoldJump = false;
        WalkSpeedValue = 16;
        Noclip = false;
        FireRate = false;
    },
    GunMods = {
        AlwaysAuto = false;
        NoSpread = false;
        NoRecoil = false;
    },
    Misc = {
        ChatSpammer = {
            Enabled = false;
            Message = "Hello, world!";
        }
    }
}

local ESPElements = {}
local AimbotFovCircle
local isTriggerbotFiring = false
local flyConnection
local walkSpeedConnection
local noclipConnection
local fireRateConnection
local gunModsConnection
local chatSpammerConnection
local originalGunValues = {}

local function SaveOriginalGunValues()
    for _, weapon in pairs(game.ReplicatedStorage.Weapons:GetChildren()) do
        if weapon:FindFirstChild("Auto") and weapon:FindFirstChild("Spread") and weapon:FindFirstChild("RecoilControl") then
            originalGunValues[weapon.Name] = {
                Auto = weapon.Auto.Value,
                Spread = weapon.Spread.Value,
                RecoilControl = weapon.RecoilControl.Value
            }
        end
    end
end

local function ApplyGunMods()
    for _, weapon in pairs(game.ReplicatedStorage.Weapons:GetChildren()) do
        if weapon:FindFirstChild("Auto") and weapon:FindFirstChild("Spread") and weapon:FindFirstChild("RecoilControl") then
            if DeleteMob.GunMods.AlwaysAuto then
                weapon.Auto.Value = true
            else
                weapon.Auto.Value = originalGunValues[weapon.Name].Auto
            end
            if DeleteMob.GunMods.NoSpread then
                weapon.Spread.Value = 0
            else
                weapon.Spread.Value = originalGunValues[weapon.Name].Spread
            end
            if DeleteMob.GunMods.NoRecoil then
                weapon.RecoilControl.Value = 0
            else
                weapon.RecoilControl.Value = originalGunValues[weapon.Name].RecoilControl
            end
        end
    end
end

local function CreateESP(plr)
    local elements = {}

    elements.box = Drawing.new("Square")
    elements.box.Visible = false
    elements.box.Color = DeleteMob.ESP.Box.BoxColor
    elements.box.Thickness = 1
    elements.box.Transparency = 1
    elements.box.Filled = false

    elements.tracer = Drawing.new("Line")
    elements.tracer.Visible = false
    elements.tracer.Color = DeleteMob.ESP.Tracers.Color
    elements.tracer.Thickness = 1
    elements.tracer.Transparency = 1

    elements.text = Drawing.new("Text")
    elements.text.Visible = false
    elements.text.Color = DeleteMob.ESP.Box.BoxColor
    elements.text.Size = 16
    elements.text.Center = true
    elements.text.Outline = true

    ESPElements[plr] = elements
end

local function UpdateESP(plr, elements)
    local character = plr.Character
    if character and character:FindFirstChild("HumanoidRootPart") and character:FindFirstChild("Humanoid") then
        if DeleteMob.ESP.Box.TeamCheck and plr.Team == PLAYER.Team then
            elements.box.Visible = false
            elements.tracer.Visible = false
            elements.text.Visible = false
            return
        end

        local humanoidRootPart = character.HumanoidRootPart
        local humanoid = character.Humanoid
        local hrpPosition, onScreen = CurrentCam:WorldToViewportPoint(humanoidRootPart.Position)

        if onScreen then
            local size = (CurrentCam:WorldToViewportPoint(humanoidRootPart.Position - Vector3.new(0, 3, 0)).Y - CurrentCam:WorldToViewportPoint(humanoidRootPart.Position + Vector3.new(0, 2.6, 0)).Y) / 2
            local boxSize = Vector2.new(math.floor(size * 1.5), math.floor(size * 1.9))
            local boxPos = Vector2.new(math.floor(hrpPosition.X - boxSize.X / 2), math.floor(hrpPosition.Y - boxSize.Y / 2))

            if DeleteMob.ESP.Box.Enabled then
                elements.box.Size = boxSize
                elements.box.Position = boxPos
                elements.box.Visible = true
                elements.box.Color = DeleteMob.ESP.Box.BoxColor
            else
                elements.box.Visible = false
            end

            if DeleteMob.ESP.Tracers.Enabled then
                elements.tracer.From = Vector2.new(CurrentCam.ViewportSize.X / 2, CurrentCam.ViewportSize.Y)
                elements.tracer.To = Vector2.new(hrpPosition.X, hrpPosition.Y)
                elements.tracer.Visible = true
                elements.tracer.Color = DeleteMob.ESP.Box.BoxColor
            else
                elements.tracer.Visible = false
            end

            elements.text.Visible = false
            local textLines = {}
            local offsetY = 0

            if DeleteMob.ESP.Box.Name then
                table.insert(textLines, plr.Name)
            end
            if DeleteMob.ESP.Box.Distance and PLAYER.Character and PLAYER.Character:FindFirstChild("HumanoidRootPart") then
                local distance = (PLAYER.Character.HumanoidRootPart.Position - humanoidRootPart.Position).Magnitude
                table.insert(textLines, string.format("Distance: %d", math.floor(distance)))
            end
            if DeleteMob.ESP.Box.Health then
                table.insert(textLines, string.format("Health: %d", math.floor(humanoid.Health)))
            end

            for i, line in ipairs(textLines) do
                elements.text.Position = Vector2.new(hrpPosition.X, hrpPosition.Y - boxSize.Y / 2 - 16 + offsetY)
                elements.text.Text = line
                elements.text.Visible = true
                offsetY = offsetY + 15
            end
            elements.text.Color = DeleteMob.ESP.Box.BoxColor
        else
            elements.box.Visible = false
            elements.tracer.Visible = false
            elements.text.Visible = false
        end
    else
        elements.box.Visible = false
        elements.tracer.Visible = false
        elements.text.Visible = false
    end
end

for _, player in pairs(game.Players:GetPlayers()) do
    if player ~= PLAYER then
        CreateESP(player)
    end
end

game.Players.PlayerAdded:Connect(function(player)
    if player ~= PLAYER then
        CreateESP(player)
    end
end)

game.Players.PlayerRemoving:Connect(function(player)
    if ESPElements[player] then
        ESPElements[player].box:Remove()
        ESPElements[player].tracer:Remove()
        ESPElements[player].text:Remove()
        ESPElements[player] = nil
    end
end)

local function UpdateAimbotFovCircle()
    if not AimbotFovCircle then
        AimbotFovCircle = Drawing.new("Circle")
        AimbotFovCircle.Thickness = DeleteMob.Aimbot.Thickness
        AimbotFovCircle.Transparency = DeleteMob.Aimbot.FovFillTransparency
        AimbotFovCircle.Color = DeleteMob.Aimbot.FovColor
    end
    if DeleteMob.Aimbot.ShowFov then
        AimbotFovCircle.Visible = true
        AimbotFovCircle.Radius = DeleteMob.Aimbot.Fov
        AimbotFovCircle.Position = mouseLocation(UIS)
        AimbotFovCircle.Color = DeleteMob.Aimbot.FovColor -- Update color dynamically
    else
        AimbotFovCircle.Visible = false
    end
end

function isVisible(p, ...)
    if not (DeleteMob.Aimbot.WallCheck) then
        return true
    end
    return #CurrentCam:GetPartsObscuringTarget({ p }, { CurrentCam, PLAYER.Character, ... }) == 0 
end

function CameraGetClosestToMouse(Fov)
    local AimFov = Fov
    local targetPos = nil

    for _, v in pairs(game:GetService("Players"):GetPlayers()) do
        if v ~= PLAYER then
            if DeleteMob.Aimbot.TeamCheck and v.Team == PLAYER.Team then
                continue
            end

            if v.Character and v.Character:FindFirstChild(DeleteMob.Aimbot.AimPart) and v.Character:FindFirstChildOfClass("Humanoid") and v.Character.Humanoid.Health > 0 then
                local screen_pos, on_screen = CurrentCam:WorldToViewportPoint(v.Character[DeleteMob.Aimbot.AimPart].Position)
                local screen_pos_2D = Vector2.new(screen_pos.X, screen_pos.Y)
                local new_magnitude = (screen_pos_2D - mouseLocation(UIS)).Magnitude
                if on_screen and new_magnitude < AimFov and isVisible(v.Character[DeleteMob.Aimbot.AimPart].Position, v.Character.Head.Parent) then
                    AimFov = new_magnitude
                    targetPos = v
                end
            end
        end
    end
    return targetPos
end

local function aimAt(pos, smooth)
    local AimPart = pos.Character:FindFirstChild(DeleteMob.Aimbot.AimPart)
    if AimPart then
        local LookAt = AimPart.Position
        CurrentCam.CFrame = CurrentCam.CFrame:Lerp(CFrame.lookAt(CurrentCam.CFrame.Position, LookAt), smooth)
    end
end

local function triggerbot()
    if DeleteMob.Triggerbot.Enabled then
        local target = mouse.Target
        if target and target.Parent and target.Parent:FindFirstChild("Humanoid") and target.Parent:FindFirstChild("HumanoidRootPart") then
            local player = game.Players:GetPlayerFromCharacter(target.Parent)
            if player and (not DeleteMob.Triggerbot.TeamCheck or (DeleteMob.Triggerbot.TeamCheck and player.Team ~= PLAYER.Team)) then
                while target and target.Parent and target.Parent:FindFirstChild("Humanoid") and target.Parent:FindFirstChild("HumanoidRootPart") and DeleteMob.Triggerbot.Enabled and mouse.Target == target do
                    if mouse.Target ~= target or not target.Parent.Humanoid or target.Parent.Humanoid.Health <= 0 then
                        break
                    end
                    mouse1press()
                    wait(DeleteMob.Triggerbot.Delay)
                    mouse1release()
                    wait(0.01)
                    target = mouse.Target
                end
            end
        end
    end
end

local function setWalkSpeed()
    local hrp = PLAYER.Character and PLAYER.Character:FindFirstChild("HumanoidRootPart")
    if hrp then
        local bv = hrp:FindFirstChild("BodyVelocity")
        if not bv then
            bv = Instance.new("BodyVelocity")
            bv.Velocity = Vector3.new(0, 0, 0)
            bv.MaxForce = Vector3.new(100000, 0, 100000)
            bv.Parent = hrp
        end

        local moveDirection = Vector3.zero
        if UIS:IsKeyDown(Enum.KeyCode.W) then
            moveDirection = moveDirection + CurrentCam.CFrame.LookVector
        end
        if UIS:IsKeyDown(Enum.KeyCode.S) then
            moveDirection = moveDirection - CurrentCam.CFrame.LookVector
        end
        if UIS:IsKeyDown(Enum.KeyCode.A) then
            moveDirection = moveDirection - CurrentCam.CFrame.RightVector
        end
        if UIS:IsKeyDown(Enum.KeyCode.D) then
            moveDirection = moveDirection + CurrentCam.CFrame.RightVector
        end

        bv.Velocity = moveDirection * DeleteMob.Player.WalkSpeedValue
    end
end

local function startFly()
    if flyConnection then flyConnection:Disconnect() end
    local hrp = PLAYER.Character and PLAYER.Character:FindFirstChild("HumanoidRootPart")
    if hrp then
        local fly = Instance.new("BodyVelocity")
        fly.Velocity = Vector3.new(0, 0, 0)
        fly.MaxForce = Vector3.new(100000, 100000, 100000)
        fly.Parent = hrp

        flyConnection = game:GetService("RunService").RenderStepped:Connect(function()
            local moveDirection = Vector3.zero
            if UIS:IsKeyDown(Enum.KeyCode.W) then
                moveDirection = moveDirection + CurrentCam.CFrame.LookVector
            end
            if UIS:IsKeyDown(Enum.KeyCode.S) then
                moveDirection = moveDirection - CurrentCam.CFrame.LookVector
            end
            if UIS:IsKeyDown(Enum.KeyCode.A) then
                moveDirection = moveDirection - CurrentCam.CFrame.RightVector
            end
            if UIS:IsKeyDown(Enum.KeyCode.D) then
                moveDirection = moveDirection + CurrentCam.CFrame.RightVector
            end
            if UIS:IsKeyDown(Enum.KeyCode.Space) then
                moveDirection = moveDirection + CurrentCam.CFrame.UpVector
            end
            if UIS:IsKeyDown(Enum.KeyCode.LeftControl) then
                moveDirection = moveDirection - CurrentCam.CFrame.UpVector
            end

            fly.Velocity = moveDirection * DeleteMob.Player.FlySpeedValue
            if moveDirection.Magnitude == 0 then
                fly.Velocity = Vector3.new(0, 0, 0)
            end
        end)
    end
end

local function stopFly()
    if flyConnection then flyConnection:Disconnect() end
    local hrp = PLAYER.Character and PLAYER.Character:FindFirstChild("HumanoidRootPart")
    if hrp and hrp:FindFirstChildOfClass("BodyVelocity") then
        hrp:FindFirstChildOfClass("BodyVelocity"):Destroy()
    end
end

local function onJumpRequest()
    if DeleteMob.Player.InfiniteJump then
        local character = PLAYER.Character
        local humanoid = character and character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
        end
    end
end

local function holdJump()
    if DeleteMob.Player.HoldJump and UIS:IsKeyDown(Enum.KeyCode.Space) then
        local character = PLAYER.Character
        local humanoid = character and character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
        end
    end
end

local function noclip()
    if DeleteMob.Player.Noclip then
        for _, v in pairs(PLAYER.Character:GetDescendants()) do
            if v:IsA("BasePart") and v.CanCollide then
                v.CanCollide = false
            end
        end
    end
end

local function setFireRate(enabled)
    if enabled then
        fireRateConnection = game:GetService("RunService").RenderStepped:Connect(function()
            game:GetService("Players").LocalPlayer.PlayerGui.GUI.Client.Variables.DISABLED.Value = false
        end)
    else
        if fireRateConnection then
            fireRateConnection:Disconnect()
            fireRateConnection = nil
        end
    end
end

local function startChatSpammer()
    chatSpammerConnection = coroutine.wrap(function()
        while DeleteMob.Misc.ChatSpammer.Enabled do
            game.ReplicatedStorage.Events.PlayerChatted:FireServer("GRRR", DeleteMob.Misc.ChatSpammer.Message, false, false, true, nil, nil)
            wait(1.8)
        end
    end)
    chatSpammerConnection()
end

local function stopChatSpammer()
    DeleteMob.Misc.ChatSpammer.Enabled = false
end

UIS.JumpRequest:Connect(onJumpRequest)

game:GetService('RunService').RenderStepped:Connect(function()
    UpdateAimbotFovCircle() -- Always update the FOV circle, visibility is managed inside the function

    if DeleteMob.Aimbot.Enabled then 
        if UIS:IsMouseButtonPressed(DeleteMob.Aimbot.Keybind) then
            local _pos = CameraGetClosestToMouse(DeleteMob.Aimbot.Fov)
            if _pos then
                aimAt(_pos, DeleteMob.Aimbot.Smoothing)
            end
        end
    end 

    triggerbot()

    if DeleteMob.Player.WalkSpeed then
        setWalkSpeed()
    end

    if DeleteMob.Player.HoldJump then
        holdJump()
    end

    if DeleteMob.Player.Noclip then
        noclip()
    end

    if DeleteMob.GunMods.AlwaysAuto or DeleteMob.GunMods.NoSpread or DeleteMob.GunMods.NoRecoil then
        ApplyGunMods()
    end

    for _, player in pairs(game.Players:GetPlayers()) do
        if player ~= PLAYER then
            if ESPElements[player] then
                UpdateESP(player, ESPElements[player])
            end
        end
    end
end)

local Rayfield = loadstring(game:HttpGet('https://raw.githubusercontent.com/SiriusSoftwareLtd/Rayfield/main/source.lua'))()
local Window = Rayfield:CreateWindow({
    Name = "Thunder Client (Chatgpt Version)",
    LoadingTitle = "Thunder Client (ChatGPT version) ",
    LoadingSubtitle = "by Bolts the skid & Andrew",
    ConfigurationSaving = {
        Enabled = true,
        FolderName = nil, 
        FileName = "thunderclientarsenal"
    },
    Discord = {
        Enabled = true,
        Invite = "thunderclient", 
        RememberJoins = true 
    },
})

local Tab = Window:CreateTab("Combat", 4483362458)
local Section = Tab:CreateSection("Testing")

local ToggleAimbot = Tab:CreateToggle({
    Name = "Aimbot",
    CurrentValue = false,
    Flag = "Toggle0",
    Callback = function(Value)
        DeleteMob.Aimbot.Enabled = Value  
    end,
})

local ToggleAimbotFov = Tab:CreateToggle({
    Name = "Show Aimbot FOV",
    CurrentValue = false,
    Flag = "Toggle1",
    Callback = function(Value)
        DeleteMob.Aimbot.ShowFov = Value  
    end,
})

local SliderAimbotFov = Tab:CreateSlider({
    Name = "Aimbot FOV Size",
    Range = {50, 500},
    Increment = 10,
    Suffix = "pixels",
    CurrentValue = DeleteMob.Aimbot.Fov,
    Flag = "Slider2",
    Callback = function(Value)
        DeleteMob.Aimbot.Fov = Value
    end,
})

local SliderAimbotSmoothing = Tab:CreateSlider({
    Name = "Aimbot Smoothness",
    Range = {0, 1},
    Increment = 0.1,
    Suffix = "",
    CurrentValue = DeleteMob.Aimbot.Smoothing,
    Flag = "Slider3",
    Callback = function(Value)
        DeleteMob.Aimbot.Smoothing = Value
    end,
})

local ColorPickerAimbotFov = Tab:CreateColorPicker({
    Name = "FOV Circle Color",
    Color = DeleteMob.Aimbot.FovColor,
    Flag = "ColorPicker2",
    Callback = function(Value)
        DeleteMob.Aimbot.FovColor = Value
    end,
})

local ToggleTriggerbot = Tab:CreateToggle({
    Name = "Triggerbot",
    CurrentValue = false,
    Flag = "Toggle4",
    Callback = function(Value)
        DeleteMob.Triggerbot.Enabled = Value
    end,
})

local SliderTriggerbotDelay = Tab:CreateSlider({
    Name = "Triggerbot Delay",
    Range = {0, 1},
    Increment = 0.1,
    Suffix = "s",
    CurrentValue = DeleteMob.Triggerbot.Delay,
    Flag = "Slider4",
    Callback = function(Value)
        DeleteMob.Triggerbot.Delay = Value
    end,
})

local ToggleTriggerbotTeamCheck = Tab:CreateToggle({
    Name = "Triggerbot Team Check",
    CurrentValue = true,
    Flag = "Toggle5",
    Callback = function(Value)
        DeleteMob.Triggerbot.TeamCheck = Value
    end,
})

local ToggleAmmo = Tab:CreateToggle({
    Name = "Inf Ammo (Not Toggleable Bolts Bad)",
    CurrentValue = false,
    Flag = "Toggle6",
    Callback = function(Value)
        if Value then
            for _, weapon in pairs(game.ReplicatedStorage:FindFirstChild("Weapons"):GetChildren()) do
                if weapon:FindFirstChild("Ammo") then
                    weapon.Ammo.Value = 999
                end
            end
        else
            print("HAHAYOUTRIEDLMFAO")
        end
    end,
})

local ToggleFireRate = Tab:CreateToggle({
    Name = "Rapid Fire",
    CurrentValue = false,
    Flag = "Toggle7",
    Callback = function(Value)
        DeleteMob.Player.FireRate = Value
        setFireRate(Value)
    end,
})

local ToggleAlwaysAuto = Tab:CreateToggle({
    Name = "Always Auto",
    CurrentValue = false,
    Flag = "Toggle8",
    Callback = function(Value)
        DeleteMob.GunMods.AlwaysAuto = Value
        ApplyGunMods()
    end,
})

local ToggleNoSpread = Tab:CreateToggle({
    Name = "No Spread",
    CurrentValue = false,
    Flag = "Toggle9",
    Callback = function(Value)
        DeleteMob.GunMods.NoSpread = Value
        ApplyGunMods()
    end,
})

local ToggleNoRecoil = Tab:CreateToggle({
    Name = "No Recoil",
    CurrentValue = false,
    Flag = "Toggle10",
    Callback = function(Value)
        DeleteMob.GunMods.NoRecoil = Value
        ApplyGunMods()
    end,
})

local Tab2 = Window:CreateTab("Visuals", 4483362458)

local ToggleESP = Tab2:CreateToggle({
    Name = "Box ESP",
    CurrentValue = false,
    Flag = "Toggle11",
    Callback = function(Value)
        DeleteMob.ESP.Box.Enabled = Value
    end,
})

local ToggleNameESP = Tab2:CreateToggle({
    Name = "Name ESP",
    CurrentValue = false,
    Flag = "Toggle12",
    Callback = function(Value)
        DeleteMob.ESP.Box.Name = Value
    end,
})

local ToggleDistanceESP = Tab2:CreateToggle({
    Name = "Distance ESP",
    CurrentValue = false,
    Flag = "Toggle13",
    Callback = function(Value)
        DeleteMob.ESP.Box.Distance = Value
    end,
})

local ToggleTracerESP = Tab2:CreateToggle({
    Name = "Tracer ESP",
    CurrentValue = false,
    Flag = "Toggle14",
    Callback = function(Value)
        DeleteMob.ESP.Tracers.Enabled = Value
    end,
})

local ColorPickerESP = Tab2:CreateColorPicker({
    Name = "ESP Color",
    Color = DeleteMob.ESP.Box.BoxColor,
    Flag = "ColorPicker1",
    Callback = function(Value)
        DeleteMob.ESP.Box.BoxColor = Value
        DeleteMob.ESP.Tracers.Color = Value -- Update tracer color dynamically
        for _, player in pairs(game.Players:GetPlayers()) do
            if player ~= PLAYER and ESPElements[player] then
                ESPElements[player].box.Color = Value
                ESPElements[player].tracer.Color = Value
                ESPElements[player].text.Color = Value
            end
        end
    end,
})

local Tab3 = Window:CreateTab("Player", 4483362458)
local Section3 = Tab3:CreateSection("Movement")

local ToggleWalkSpeed = Tab3:CreateToggle({
    Name = "CFrame WalkSpeed",
    CurrentValue = false,
    Flag = "Toggle15",
    Callback = function(Value)
        DeleteMob.Player.WalkSpeed = Value
        if Value then
            setWalkSpeed()
            walkSpeedConnection = game:GetService("RunService").RenderStepped:Connect(setWalkSpeed)
        elseif walkSpeedConnection then
            walkSpeedConnection:Disconnect()
            walkSpeedConnection = nil
        end
    end,
})

local SliderWalkSpeed = Tab3:CreateSlider({
    Name = "WalkSpeed",
    Range = {16, 100},
    Increment = 1,
    Suffix = "speed",
    CurrentValue = DeleteMob.Player.WalkSpeedValue,
    Flag = "Slider5",
    Callback = function(Value)
        DeleteMob.Player.WalkSpeedValue = Value
    end,
})

local ToggleFly = Tab3:CreateToggle({
    Name = "CFrame Fly",
    CurrentValue = false,
    Flag = "Toggle16",
    Callback = function(Value)
        DeleteMob.Player.Fly = Value
        if Value then
            startFly()
        else
            stopFly()
        end
    end,
})

local SliderFlySpeed = Tab3:CreateSlider({
    Name = "Fly Speed",
    Range = {5, 100},
    Increment = 1,
    Suffix = "speed",
    CurrentValue = DeleteMob.Player.FlySpeedValue,
    Flag = "Slider6",
    Callback = function(Value)
        DeleteMob.Player.FlySpeedValue = Value
    end,
})

local ToggleInfiniteJump = Tab3:CreateToggle({
    Name = "Infinite Jump",
    CurrentValue = false,
    Flag = "Toggle17",
    Callback = function(Value)
        DeleteMob.Player.InfiniteJump = Value
    end,
})

local ToggleHoldJump = Tab3:CreateToggle({
    Name = "Hold Space to Keep Jumping",
    CurrentValue = false,
    Flag = "Toggle18",
    Callback = function(Value)
        DeleteMob.Player.HoldJump = Value
    end,
})

local ToggleNoclip = Tab3:CreateToggle({
    Name = "Noclip",
    CurrentValue = false,
    Flag = "Toggle19",
    Callback = function(Value)
        DeleteMob.Player.Noclip = Value
        if Value then
            noclipConnection = game:GetService("RunService").Stepped:Connect(function()
                for _, v in pairs(PLAYER.Character:GetDescendants()) do
                    if v:IsA("BasePart") then
                        v.CanCollide = false
                    end
                end
            end)
        else
            if noclipConnection then
                noclipConnection:Disconnect()
                noclipConnection = nil
            end
            for _, v in pairs(PLAYER.Character:GetDescendants()) do
                if v:IsA("BasePart") then
                    v.CanCollide = true
                end
            end
        end
    end,
})

-- Misc Tab
local TabMisc = Window:CreateTab("Misc", 4483362458)
local SectionMisc = TabMisc:CreateSection("Miscellaneous")

local ButtonRejoin = TabMisc:CreateButton({
    Name = "Rejoin",
    Callback = function()
        local TeleportService = game:GetService("TeleportService")
        local PlaceId = game.PlaceId
        TeleportService:Teleport(PlaceId, PLAYER)
    end,
})

local ToggleChatSpammer = TabMisc:CreateToggle({
    Name = "Chat Spammer (Broken Do Not Use)",
    CurrentValue = false,
    Flag = "Toggle20",
    Callback = function(Value)
        DeleteMob.Misc.ChatSpammer.Enabled = Value
        if Value then
            startChatSpammer()
        else
            stopChatSpammer()
        end
    end,
})

local TextBoxChatSpammer = TabMisc:CreateInput({
    Name = "Chat Spammer Message",
    PlaceholderText = "Input Placeholder",
    RemoveTextAfterFocusLost = false,
    Callback = function(Text)
        DeleteMob.Misc.ChatSpammer.Message = Text
    end,
})

-- Credits Tab
local TabCredits = Window:CreateTab("Credits", 4483362458)
local SectionCredits = TabCredits:CreateSection("Credits")

local Label1 = TabCredits:CreateLabel("Bolts used ai on all of this code")
local Label1 = TabCredits:CreateLabel("Andrew made all of the script")
local Label2 = TabCredits:CreateLabel("discord.gg/skiddedclient")

SaveOriginalGunValues() -- Save original gun values when the script is executed
